# Generated by Django 4.2.9 on 2024-01-23 09:51

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Control',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, verbose_name='Метод контроля выполнения задачи')),
            ],
            options={
                'verbose_name': 'Метод контроля',
                'verbose_name_plural': 'Методы контроля',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='employee', to='tasks.employee')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_user', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Idp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='название')),
                ('status_idp', models.CharField(choices=[('in_work', 'в работе'), ('canceled', 'отменен'), ('not_completed', 'не выполнен'), ('done', 'выполнен')], default='in_work', max_length=100, verbose_name='статус')),
                ('date_start', models.DateField(default=datetime.date.today, editable=False, verbose_name='дата начала')),
                ('date_end', models.DateField(verbose_name='дата окончания')),
                ('director', mptt.fields.TreeForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='idp_director', to='tasks.employee', verbose_name='директор')),
                ('employee', mptt.fields.TreeForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='idp_employee', to='tasks.employee', verbose_name='сотрудник')),
            ],
            options={
                'verbose_name': 'индивидуальный план развития',
                'ordering': ['date_start', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название типа задачи')),
            ],
            options={
                'verbose_name': 'Тип задачи',
                'verbose_name_plural': 'Типы задач',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название задачи')),
                ('description', models.TextField(max_length=500, verbose_name='Описание задачи')),
                ('status_progress', models.CharField(choices=[('in_work', 'в работе'), ('done', 'выполнено')], default='in_work', max_length=20, verbose_name='Статус выполнения')),
                ('status_accept', models.CharField(choices=[('accepted', 'принято'), ('not_accepted', 'не принято'), ('cancelled', 'отменено')], default='not_accepted', max_length=20, verbose_name='Статус проверки')),
                ('date_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата начала выполнения задачи')),
                ('date_end', models.DateTimeField(verbose_name='Дата окончания выполнения задачи')),
                ('control', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_control', to='tasks.control', verbose_name='Метод контроля выполнения задачи')),
                ('idp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_idp', to='tasks.idp', verbose_name='ИПС')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_type', to='tasks.type', verbose_name='Тип задачи')),
            ],
            options={
                'verbose_name': 'Задача',
                'verbose_name_plural': 'Задачи',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(max_length=500, verbose_name='Комментарий')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_employee', to='tasks.employee', verbose_name='Пользователь')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_task', to='tasks.task', verbose_name='Задача')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
                'ordering': ('-pub_date',),
            },
        ),
        migrations.AddConstraint(
            model_name='idp',
            constraint=models.CheckConstraint(check=models.Q(('date_end__gt', models.F('date_start'))), name='check_start_date'),
        ),
        migrations.AlterUniqueTogether(
            name='idp',
            unique_together={('title', 'employee', 'date_start')},
        ),
    ]
